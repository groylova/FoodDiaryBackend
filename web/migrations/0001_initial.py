# Generated by Django 4.1.6 on 2023-02-15 23:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Custom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_type', models.IntegerField(choices=[(0, 'Client'), (1, 'Doctor')], verbose_name='Client or doctor')),
                ('birth_date', models.DateField(null=True, verbose_name='Date of birth')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Custom')),
            ],
        ),
        migrations.CreateModel(
            name='Feeling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feeling_name', models.CharField(max_length=200, verbose_name='Feeling name')),
                ('feeling_full_name', models.CharField(max_length=300, verbose_name='Feeling full name')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Amount')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Amount of grams')),
                ('percent', models.PositiveIntegerField(verbose_name='Percent of portion')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ing_type_name', models.CharField(max_length=200, verbose_name='Ingredient type name')),
                ('default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date of event')),
                ('metric_type', models.IntegerField(choices=[(0, 'Weight'), (1, 'Height')], verbose_name='Client or doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PFC_goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pfc_goal_name', models.CharField(max_length=200, verbose_name='PFC goal name.')),
                ('protein_amount', models.PositiveIntegerField(verbose_name='Protein amount')),
                ('protein_percent', models.PositiveIntegerField(verbose_name='Protein percent')),
                ('fat_amount', models.PositiveIntegerField(verbose_name='Fat amount')),
                ('fat_percent', models.PositiveIntegerField(verbose_name='Fat percent')),
                ('carb_amount', models.PositiveIntegerField(verbose_name='Carb amount')),
                ('carb_percent', models.PositiveIntegerField(verbose_name='Carb percent')),
                ('calories_amount', models.PositiveIntegerField(verbose_name='Amount of calories')),
                ('calories_percent', models.PositiveIntegerField(verbose_name='Calories percent of portion')),
                ('default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scale_name', models.CharField(max_length=200, verbose_name='Scale name')),
                ('scale_full_name', models.CharField(max_length=300, verbose_name='Scale full name')),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Min amount')),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Max amount')),
                ('step', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Step')),
                ('better_amount', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Better amount')),
                ('default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyIngType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(max_length=200, verbose_name='Property name')),
                ('ing_type', models.ManyToManyField(to='web.ingredienttype')),
            ],
        ),
        migrations.CreateModel(
            name='PFC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protein_amount', models.PositiveIntegerField(verbose_name='Protein amount of grams')),
                ('protein_percent', models.PositiveIntegerField(verbose_name='Protein percent of portion')),
                ('fat_amount', models.PositiveIntegerField(verbose_name='Fat amount of grams')),
                ('fat_percent', models.PositiveIntegerField(verbose_name='Fat percent of portion')),
                ('carb_amount', models.PositiveIntegerField(verbose_name='Carb amount of grams')),
                ('carb_percent', models.PositiveIntegerField(verbose_name='Carb percent of portion')),
                ('calories_amount', models.PositiveIntegerField(verbose_name='Amount of calories')),
                ('calories_percent', models.PositiveIntegerField(verbose_name='Calories percent of portion')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(limit_choices_to={'client_type': 0}, on_delete=django.db.models.deletion.CASCADE, related_name='client', to='web.custom')),
                ('doctor', models.ForeignKey(limit_choices_to={'client_type': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='web.custom')),
            ],
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Date and time of event')),
                ('meal_type', models.IntegerField(choices=[(0, 'Breakfast'), (1, 'Launch'), (2, 'Dinner'), (3, 'Snack')], verbose_name='Type of meal')),
                ('photo_s3', models.URLField(verbose_name='Photo of meal')),
                ('tmp_photo', models.ImageField(upload_to='')),
                ('client', models.ForeignKey(limit_choices_to={'client_type': 0}, on_delete=django.db.models.deletion.CASCADE, to='web.custom')),
            ],
        ),
        migrations.AddField(
            model_name='ingredient',
            name='ing_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.ingredienttype'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='nutrition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.nutrition'),
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_name', models.CharField(max_length=200, verbose_name='Goal name')),
                ('description', models.CharField(max_length=1000, verbose_name='Description')),
                ('calc_type', models.IntegerField(choices=[(0, 'Whole'), (1, 'Period')], verbose_name='Calculation type')),
                ('period', models.IntegerField(choices=[(0, 'Day'), (1, 'Week'), (2, 'Month'), (3, 'Year')], verbose_name='Period type')),
                ('amount_of_period', models.PositiveIntegerField(default=1, verbose_name='Amount of period')),
                ('start_date', models.DateField(verbose_name='Start day')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('percent', models.PositiveIntegerField(default=0, null=True, verbose_name='Percent for fewer or more eating')),
                ('amount', models.PositiveIntegerField(default=0, null=True, verbose_name='Amount for fewer or more eating')),
                ('client', models.ForeignKey(limit_choices_to={'client_type': 0}, on_delete=django.db.models.deletion.CASCADE, to='web.custom')),
                ('feeling', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.feeling')),
                ('pfc_goal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.pfc_goal')),
            ],
        ),
        migrations.AddField(
            model_name='feeling',
            name='scale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.scale'),
        ),
        migrations.CreateModel(
            name='CustomScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(limit_choices_to={'client_type': 0}, on_delete=django.db.models.deletion.CASCADE, to='web.custom')),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.scale')),
            ],
        ),
        migrations.CreateModel(
            name='CustomPFCGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(limit_choices_to={'client_type': 0}, on_delete=django.db.models.deletion.CASCADE, to='web.custom')),
                ('pfc_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.pfc_goal')),
            ],
        ),
        migrations.CreateModel(
            name='CustomIngredientType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(limit_choices_to={'client_type': 0}, on_delete=django.db.models.deletion.CASCADE, to='web.custom')),
                ('ing_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.ingredienttype')),
            ],
        ),
    ]
